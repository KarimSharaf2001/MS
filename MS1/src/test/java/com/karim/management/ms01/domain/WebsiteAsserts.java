package com.karim.management.ms01.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class WebsiteAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWebsiteAllPropertiesEquals(Website expected, Website actual) {
        assertWebsiteAutoGeneratedPropertiesEquals(expected, actual);
        assertWebsiteAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWebsiteAllUpdatablePropertiesEquals(Website expected, Website actual) {
        assertWebsiteUpdatableFieldsEquals(expected, actual);
        assertWebsiteUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWebsiteAutoGeneratedPropertiesEquals(Website expected, Website actual) {
        assertThat(expected)
            .as("Verify Website auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWebsiteUpdatableFieldsEquals(Website expected, Website actual) {
        assertThat(expected)
            .as("Verify Website relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getUrl()).as("check url").isEqualTo(actual.getUrl()))
            .satisfies(e -> assertThat(e.getOwnerEmail()).as("check ownerEmail").isEqualTo(actual.getOwnerEmail()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWebsiteUpdatableRelationshipsEquals(Website expected, Website actual) {
        // empty method
    }
}
